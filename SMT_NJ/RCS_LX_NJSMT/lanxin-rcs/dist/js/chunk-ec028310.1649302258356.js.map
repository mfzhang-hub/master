{"version":3,"sources":["webpack:///./node_modules/_core-js@3.21.1@core-js/modules/es.array.fill.js","webpack:///./src/views/config/connectVertex.vue?4120","webpack:///./src/api/config/connect.js","webpack:///src/views/config/connectVertex.vue","webpack:///./src/views/config/connectVertex.vue?0c7f","webpack:///./src/views/config/connectVertex.vue","webpack:///./src/api/config/domain.js","webpack:///./src/utils/drawMap.js","webpack:///./src/api/map.js","webpack:///./node_modules/_@babel_runtime@7.17.2@@babel/runtime/helpers/esm/classCallCheck.js","webpack:///./node_modules/_core-js@3.21.1@core-js/internals/array-fill.js","webpack:///./node_modules/_@babel_runtime@7.17.2@@babel/runtime/helpers/esm/createClass.js"],"names":["$","fill","addToUnscopables","target","proto","render","_vm","this","_h","$createElement","_c","_self","staticClass","ref","staticStyle","attrs","areaName","on","goBack","directives","name","rawName","value","expression","handleCreate","_v","tableList","innerHeightMinusFilter","scopedSlots","_u","key","fn","scope","_s","mapList","row","sourceMapId","targetMapId","$event","handleDelete","class","fullscreen","dialogFormVisible","closeDialog","slot","dialogStatus","setFullScreen","rules","temp","drawMapId","createMapView","model","callback","$$v","$set","trim","_l","areaId","Number","setPoint","sourceConnectPoint","item","targetConnectPoint","registerCharge","updateVehicle","staticRenderFns","getConnectList","data","request","get","addConnect","post","updateConnect","put","deleteConnect","props","tableLoading","listQuery","mapId","id","virtualDistance","required","message","trigger","pattern","domainList","pointList","drawMap","mapInfo","mapPoints","mapRoutes","lastCheckedPoint","backPage","mounted","getDomainList","res","getMapList","methods","$router","push","getList","state","resetTemp","$nextTick","connectPoints","handleUpdate","JSON","parse","stringify","clearMap","$confirm","confirmButtonText","cancelButtonText","type","then","catch","$refs","validate","valid","params","status","amrId","getMap","Message","Promise","getMapDetails","resolve","reject","drawMapView","svg","ele","vertexCode","removePointClass","addPointClass","prePoint","removeClass","curPoint","addClass","component","editDomain","deleteDomain","getForcedArea","setForcedArea","enable","DrawMap","canvas","mapGroup","line","point","pointText","clickTimeout","clickTimeoutTime","scale","maxCodeLimit","isCodeShow","map","remove","minX","minY","maxX","maxY","viewWidth","clientWidth","viewHeight","clientHeight","topologyMap","originX","originY","weight","height","mapPointX","vertexPo","x","mapPointY","y","length","Math","min","apply","max","matrix","Matrix","viewX","viewY","scaleX","floor","scaleY","size","viewbox","transform","panZoom","zoomMin","zoomMax","zoomFactor","group","drawMapPoint","drawMapRoute","showClose","duration","dangerouslyUseHTMLString","drawSpotCodes","zoom","addEventListener","mouseWheelHandler","bind","setSort","color","drawPoint","circle","code","replace","center","add","d","startVertex","targetVertex","path","stroke","width","fun","plain","font","rotate","loadingMessage","close","setTimeout","clear","updateMap","deleteMap","_classCallCheck","instance","Constructor","TypeError","toObject","toAbsoluteIndex","lengthOfArrayLike","module","exports","O","argumentsLength","arguments","index","undefined","end","endPos","_defineProperties","i","descriptor","enumerable","configurable","writable","Object","defineProperty","_createClass","protoProps","staticProps","prototype"],"mappings":"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","file":"js/chunk-ec028310.1649302258356.js","sourcesContent":["var $ = require('../internals/export');\nvar fill = require('../internals/array-fill');\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// `Array.prototype.fill` method\n// https://tc39.es/ecma262/#sec-array.prototype.fill\n$({ target: 'Array', proto: true }, {\n  fill: fill\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('fill');\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"connect-container\"},[_c('div',{ref:\"filterContainer\",staticClass:\"filter-container filter-container-flex\"},[_c('el-page-header',{staticStyle:{\"margin-right\":\"20px\"},attrs:{\"content\":_vm.areaName},on:{\"back\":_vm.goBack}}),_c('el-button',{directives:[{name:\"hasPermi\",rawName:\"v-hasPermi\",value:('config/area/update'),expression:\"'config/area/update'\"}],attrs:{\"type\":\"success\",\"icon\":\"el-icon-plus\"},on:{\"click\":_vm.handleCreate}},[_vm._v(\"新增连接点\")])],1),_c('div',{staticClass:\"table-container\"},[_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.tableLoading),expression:\"tableLoading\"}],attrs:{\"data\":_vm.tableList,\"highlight-current-row\":\"\",\"border\":\"\",\"height\":_vm.innerHeightMinusFilter - 141}},[_c('el-table-column',{attrs:{\"type\":\"index\",\"label\":\"序号\",\"align\":\"center\",\"width\":\"100\",\"fixed\":\"left\"}}),_c('el-table-column',{attrs:{\"label\":\"起始地图\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(\" \"+_vm._s(_vm.mapList[scope.row.sourceMapId] && _vm.mapList[scope.row.sourceMapId].name)+\" \")]}}])}),_c('el-table-column',{attrs:{\"label\":\"起始点位\",\"prop\":\"sourceConnectPoint\",\"align\":\"center\"}}),_c('el-table-column',{attrs:{\"label\":\"目标地图\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(\" \"+_vm._s(_vm.mapList[scope.row.targetMapId] && _vm.mapList[scope.row.targetMapId].name)+\" \")]}}])}),_c('el-table-column',{attrs:{\"label\":\"目标点位\",\"prop\":\"targetConnectPoint\",\"align\":\"center\"}}),_c('el-table-column',{attrs:{\"label\":\"虚拟距离\",\"prop\":\"virtualDistance\",\"align\":\"center\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\",\"align\":\"center\",\"width\":\"80\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar row = ref.row;\nreturn [_c('el-button',{directives:[{name:\"hasPermi\",rawName:\"v-hasPermi\",value:('config/area/update'),expression:\"'config/area/update'\"}],attrs:{\"type\":\"danger\",\"icon\":\"el-icon-delete\",\"circle\":\"\"},on:{\"click\":function($event){return _vm.handleDelete(row)}}})]}}])})],1)],1),_c('el-dialog',{staticClass:\"drawMap-container\",class:_vm.fullscreen ? 'fullscreen-dialog' : '',attrs:{\"visible\":_vm.dialogFormVisible,\"width\":\"90%\",\"close-on-click-modal\":false,\"fullscreen\":_vm.fullscreen,\"top\":\"30px\"},on:{\"update:visible\":function($event){_vm.dialogFormVisible=$event},\"close\":_vm.closeDialog}},[_c('div',{staticClass:\"dialog-title\",attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',[_vm._v(_vm._s(_vm.dialogStatus === \"create\" ? \"增加连接点\" : \"修改连接点\"))]),_c('a',{staticStyle:{\"margin-right\":\"30px\"},on:{\"click\":_vm.setFullScreen}},[_c('i',{staticClass:\"el-icon-full-screen\"})])]),_c('el-form',{ref:\"dataForm\",staticClass:\"dataForm\",attrs:{\"rules\":_vm.rules,\"model\":_vm.temp,\"label-width\":\"110px\",\"width\":\"400px\"}},[_c('el-form-item',{attrs:{\"prop\":\"sourceMapId\"}},[_c('el-button',{attrs:{\"slot\":\"label\",\"size\":\"small\",\"type\":_vm.temp.sourceMapId && _vm.temp.sourceMapId === _vm.drawMapId\n              ? 'success'\n              : 'info',\"round\":\"\"},on:{\"click\":function($event){return _vm.createMapView(_vm.temp.sourceMapId)}},slot:\"label\"},[_vm._v(\"起始地图\")]),_c('el-select',{staticClass:\"filter-item\",staticStyle:{\"width\":\"100%\"},attrs:{\"filterable\":\"\",\"placeholder\":\"请选择地图\"},on:{\"change\":function($event){return _vm.createMapView(_vm.temp.sourceMapId)}},model:{value:(_vm.temp.sourceMapId),callback:function ($$v) {_vm.$set(_vm.temp, \"sourceMapId\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"temp.sourceMapId\"}},_vm._l((_vm.mapList),function(value,key){return _c('el-option',{directives:[{name:\"show\",rawName:\"v-show\",value:(\n              _vm.temp.areaId === value.areaId && Number(key) !== _vm.temp.targetMapId\n            ),expression:\"\\n              temp.areaId === value.areaId && Number(key) !== temp.targetMapId\\n            \"}],key:key,attrs:{\"label\":value.name,\"value\":Number(key)}})}),1)],1),_c('el-form-item',{attrs:{\"label\":\"起始点位\",\"prop\":\"sourceConnectPoint\"}},[_c('el-select',{staticClass:\"filter-item\",staticStyle:{\"width\":\"100%\"},attrs:{\"filterable\":\"\",\"placeholder\":\"请选择点位\"},on:{\"change\":function($event){return _vm.setPoint(_vm.temp.sourceConnectPoint)}},model:{value:(_vm.temp.sourceConnectPoint),callback:function ($$v) {_vm.$set(_vm.temp, \"sourceConnectPoint\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"temp.sourceConnectPoint\"}},_vm._l((_vm.pointList),function(item){return _c('el-option',{key:item,attrs:{\"label\":item,\"value\":item}})}),1)],1),_c('el-form-item',{attrs:{\"prop\":\"targetMapId\"}},[_c('el-button',{attrs:{\"slot\":\"label\",\"size\":\"small\",\"type\":_vm.temp.targetMapId && _vm.temp.targetMapId === _vm.drawMapId\n              ? 'success'\n              : 'info',\"round\":\"\"},on:{\"click\":function($event){return _vm.createMapView(_vm.temp.targetMapId)}},slot:\"label\"},[_vm._v(\"目标地图\")]),_c('el-select',{staticClass:\"filter-item\",staticStyle:{\"width\":\"100%\"},attrs:{\"filterable\":\"\",\"placeholder\":\"请选择地图\"},on:{\"change\":function($event){return _vm.createMapView(_vm.temp.targetMapId)}},model:{value:(_vm.temp.targetMapId),callback:function ($$v) {_vm.$set(_vm.temp, \"targetMapId\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"temp.targetMapId\"}},_vm._l((_vm.mapList),function(value,key){return _c('el-option',{directives:[{name:\"show\",rawName:\"v-show\",value:(\n              _vm.temp.areaId === value.areaId && Number(key) !== _vm.temp.sourceMapId\n            ),expression:\"\\n              temp.areaId === value.areaId && Number(key) !== temp.sourceMapId\\n            \"}],key:key,attrs:{\"label\":value.name,\"value\":Number(key)}})}),1)],1),_c('el-form-item',{attrs:{\"label\":\"目标点位\",\"prop\":\"targetConnectPoint\"}},[_c('el-select',{staticClass:\"filter-item\",staticStyle:{\"width\":\"100%\"},attrs:{\"filterable\":\"\",\"placeholder\":\"请选择点位\"},on:{\"change\":function($event){return _vm.setPoint(_vm.temp.targetConnectPoint)}},model:{value:(_vm.temp.targetConnectPoint),callback:function ($$v) {_vm.$set(_vm.temp, \"targetConnectPoint\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"temp.targetConnectPoint\"}},_vm._l((_vm.pointList),function(item){return _c('el-option',{key:item,attrs:{\"label\":item,\"value\":item}})}),1)],1),_c('el-form-item',{attrs:{\"label\":\"虚拟距离\",\"prop\":\"virtualDistance\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入虚拟距离\",\"clearable\":\"\",\"maxlength\":30},model:{value:(_vm.temp.virtualDistance),callback:function ($$v) {_vm.$set(_vm.temp, \"virtualDistance\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"temp.virtualDistance\"}})],1)],1),_c('el-main',{class:[_vm.fullscreen ? 'drawMap-fullscreen' : ''],attrs:{\"id\":\"drawMap\"}}),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{staticStyle:{\"width\":\"100px\"},on:{\"click\":_vm.closeDialog}},[_vm._v(\"取 消\")]),_c('el-button',{staticStyle:{\"width\":\"100px\",\"margin-left\":\"30px\"},attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.dialogStatus === 'create' ? _vm.registerCharge() : _vm.updateVehicle()}}},[_vm._v(\"确 认\")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import request from '@/utils/request'\n\n// 获取连接点列表\nexport function getConnectList(data) {\n  return request.get('map/connect/list', data)\n}\n\n// 新增连接点\nexport function addConnect(data) {\n  return request.post('map/connect/add', data)\n}\n\n// 修改连接点\nexport function updateConnect(data) {\n  return request.put('map/connect/update', data)\n}\n\n// 删除连接点\nexport function deleteConnect(data) {\n  return request.get('map/connect/delete', data)\n}","<template>\n  <div class=\"connect-container\">\n    <div class=\"filter-container filter-container-flex\" ref=\"filterContainer\">\n      <el-page-header\n        @back=\"goBack\"\n        :content=\"areaName\"\n        style=\"margin-right: 20px\"\n      >\n      </el-page-header>\n      <!-- <el-select\n        v-model.trim=\"listQuery.mapId\"\n        placeholder=\"请选择地图\"\n        filterable\n        clearable\n        @change=\"getList\"\n        class=\"filter-select\"\n      >\n        <el-option-group\n          v-for=\"(group, key) in domainList\"\n          :key=\"'area-' + key\"\n          :label=\"group.name\"\n        >\n          <el-option\n            v-for=\"item in group.topologyMapPos || []\"\n            :key=\"'map-' + item.id\"\n            :label=\"group.name + '/' + item.name\"\n            :value=\"Number(item.id)\"\n            class=\"select-group-option\"\n          >\n          </el-option>\n        </el-option-group>\n      </el-select> -->\n      <!-- <el-button type=\"primary\" @click=\"getList\" class=\"append-btn\"\n        >搜索</el-button\n      > -->\n      <el-button\n        type=\"success\"\n        icon=\"el-icon-plus\"\n        @click=\"handleCreate\"\n        v-hasPermi=\"'config/area/update'\"\n        >新增连接点</el-button\n      >\n    </div>\n    <div class=\"table-container\">\n      <el-table\n        v-loading=\"tableLoading\"\n        :data=\"tableList\"\n        highlight-current-row\n        border\n        :height=\"innerHeightMinusFilter - 141\"\n      >\n        <el-table-column\n          type=\"index\"\n          label=\"序号\"\n          align=\"center\"\n          width=\"100\"\n          fixed=\"left\"\n        />\n        <el-table-column label=\"起始地图\" align=\"center\">\n          <template slot-scope=\"scope\">\n            {{\n              mapList[scope.row.sourceMapId] &&\n              mapList[scope.row.sourceMapId].name\n            }}\n          </template>\n        </el-table-column>\n        <el-table-column\n          label=\"起始点位\"\n          prop=\"sourceConnectPoint\"\n          align=\"center\"\n        />\n        <el-table-column label=\"目标地图\" align=\"center\">\n          <template slot-scope=\"scope\">\n            {{\n              mapList[scope.row.targetMapId] &&\n              mapList[scope.row.targetMapId].name\n            }}\n          </template>\n        </el-table-column>\n        <el-table-column\n          label=\"目标点位\"\n          prop=\"targetConnectPoint\"\n          align=\"center\"\n        />\n        <el-table-column\n          label=\"虚拟距离\"\n          prop=\"virtualDistance\"\n          align=\"center\"\n        />\n        <el-table-column label=\"操作\" align=\"center\" width=\"80\">\n          <template slot-scope=\"{ row }\">\n            <!-- <el-button\n              type=\"primary\"\n              icon=\"el-icon-edit\"\n              @click=\"handleUpdate(row)\"\n              circle\n            /> -->\n            <el-button\n              type=\"danger\"\n              icon=\"el-icon-delete\"\n              @click=\"handleDelete(row)\"\n              v-hasPermi=\"'config/area/update'\"\n              circle\n            />\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n    <el-dialog\n      :visible.sync=\"dialogFormVisible\"\n      width=\"90%\"\n      :close-on-click-modal=\"false\"\n      :fullscreen=\"fullscreen\"\n      class=\"drawMap-container\"\n      :class=\"fullscreen ? 'fullscreen-dialog' : ''\"\n      top=\"30px\"\n      @close=\"closeDialog\"\n    >\n      <div slot=\"title\" class=\"dialog-title\">\n        <span>{{\n          dialogStatus === \"create\" ? \"增加连接点\" : \"修改连接点\"\n        }}</span>\n        <a @click=\"setFullScreen\" style=\"margin-right: 30px\">\n          <i class=\"el-icon-full-screen\"></i>\n        </a>\n      </div>\n      <el-form\n        ref=\"dataForm\"\n        :rules=\"rules\"\n        :model=\"temp\"\n        label-width=\"110px\"\n        width=\"400px\"\n        class=\"dataForm\"\n      >\n        <el-form-item prop=\"sourceMapId\">\n          <el-button\n            slot=\"label\"\n            size=\"small\"\n            :type=\"\n              temp.sourceMapId && temp.sourceMapId === drawMapId\n                ? 'success'\n                : 'info'\n            \"\n            round\n            @click=\"createMapView(temp.sourceMapId)\"\n            >起始地图</el-button\n          >\n          <el-select\n            v-model.trim=\"temp.sourceMapId\"\n            filterable\n            placeholder=\"请选择地图\"\n            class=\"filter-item\"\n            style=\"width: 100%\"\n            @change=\"createMapView(temp.sourceMapId)\"\n          >\n            <el-option\n              v-for=\"(value, key) in mapList\"\n              :key=\"key\"\n              :label=\"value.name\"\n              :value=\"Number(key)\"\n              v-show=\"\n                temp.areaId === value.areaId && Number(key) !== temp.targetMapId\n              \"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"起始点位\" prop=\"sourceConnectPoint\">\n          <el-select\n            v-model.trim=\"temp.sourceConnectPoint\"\n            filterable\n            placeholder=\"请选择点位\"\n            class=\"filter-item\"\n            style=\"width: 100%\"\n            @change=\"setPoint(temp.sourceConnectPoint)\"\n          >\n            <el-option\n              v-for=\"item in pointList\"\n              :key=\"item\"\n              :label=\"item\"\n              :value=\"item\"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item prop=\"targetMapId\">\n          <el-button\n            slot=\"label\"\n            size=\"small\"\n            :type=\"\n              temp.targetMapId && temp.targetMapId === drawMapId\n                ? 'success'\n                : 'info'\n            \"\n            round\n            @click=\"createMapView(temp.targetMapId)\"\n            >目标地图</el-button\n          >\n          <el-select\n            v-model.trim=\"temp.targetMapId\"\n            filterable\n            placeholder=\"请选择地图\"\n            class=\"filter-item\"\n            style=\"width: 100%\"\n            @change=\"createMapView(temp.targetMapId)\"\n          >\n            <el-option\n              v-for=\"(value, key) in mapList\"\n              :key=\"key\"\n              :label=\"value.name\"\n              :value=\"Number(key)\"\n              v-show=\"\n                temp.areaId === value.areaId && Number(key) !== temp.sourceMapId\n              \"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"目标点位\" prop=\"targetConnectPoint\">\n          <el-select\n            v-model.trim=\"temp.targetConnectPoint\"\n            filterable\n            placeholder=\"请选择点位\"\n            class=\"filter-item\"\n            style=\"width: 100%\"\n            @change=\"setPoint(temp.targetConnectPoint)\"\n          >\n            <el-option\n              v-for=\"item in pointList\"\n              :key=\"item\"\n              :label=\"item\"\n              :value=\"item\"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"虚拟距离\" prop=\"virtualDistance\">\n          <el-input\n            v-model.trim=\"temp.virtualDistance\"\n            placeholder=\"请输入虚拟距离\"\n            clearable\n            :maxlength=\"30\"\n          />\n        </el-form-item>\n      </el-form>\n      <el-main\n        id=\"drawMap\"\n        v-bind:class=\"[fullscreen ? 'drawMap-fullscreen' : '']\"\n      ></el-main>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button style=\"width: 100px\" @click=\"closeDialog\">取 消</el-button>\n        <el-button\n          type=\"primary\"\n          style=\"width: 100px; margin-left: 30px\"\n          @click=\"\n            dialogStatus === 'create' ? registerCharge() : updateVehicle()\n          \"\n          >确 认</el-button\n        >\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { getDomainList } from \"@/api/config/domain\";\nimport { getMapList } from \"@/api/map\";\nimport {\n  getConnectList,\n  addConnect,\n  deleteConnect,\n  updateConnect,\n} from \"@/api/config/connect\";\nimport DrawMap from \"@/utils/drawMap\";\nimport { Message } from \"element-ui\";\nimport { getMapDetails } from \"@/api/map\";\nexport default {\n  name: \"connect\",\n  props: [\"innerHeightMinusFilter\"],\n  data() {\n    return {\n      tableList: [], //连接点列表\n      tableLoading: true, //等待\n      dialogFormVisible: false, //是否打开弹框\n      dialogStatus: \"\", //编辑还是增加\n      listQuery: {\n        mapId: \"\",\n      },\n      temp: {\n        id: null,\n        areaId: \"\",\n        sourceMapId: \"\",\n        sourceConnectPoint: \"\",\n        targetMapId: \"\",\n        targetConnectPoint: \"\",\n        virtualDistance: 0,\n      },\n      rules: {\n        areaId: [\n          { required: true, message: \"区域不能为空\", trigger: \"change\" },\n        ],\n        sourceMapId: [\n          { required: true, message: \"起始地图不能为空\", trigger: \"change\" },\n        ],\n        sourceConnectPoint: [\n          { required: true, message: \"起始点位不能为空\", trigger: \"change\" },\n        ],\n        targetMapId: [\n          { required: true, message: \"目标地图不能为空\", trigger: \"change\" },\n        ],\n        targetConnectPoint: [\n          { required: true, message: \"目标点位不能为空\", trigger: \"change\" },\n        ],\n        virtualDistance: [\n          {\n            required: true,\n            message: \"虚拟距离不能为空\",\n            trigger: \"blur\",\n          },\n          {\n            message: \"虚拟距离必须为纯数字\",\n            pattern: /^[-\\d]*$/,\n            trigger: \"blur\",\n          },\n        ],\n      },\n      domainList: {}, // 区域列表\n      mapList: {}, // 地图列表\n      pointList: [], // 点位列表\n      fullscreen: false, //是否全屏\n      drawMap: new DrawMap(), //绘制地图\n      mapInfo: { mapPoints: [], mapRoutes: [] }, //地图数据\n      lastCheckedPoint: \"\", //上一次选中的点位\n      drawMapId: \"\", //当前绘制的地图id\n      backPage: \"\", //返回地址\n      areaId: \"\", //区域id\n      areaName: \"\", //区域名称\n    };\n  },\n  async mounted() {\n    this.$emit(\"watchFilterHeight\");\n    // 获取区域列表\n    getDomainList().then((res) => {\n      if (res.state && res.data.data) {\n        res.data.data.forEach((item) => {\n          this.$set(this.domainList, item.id, item);\n        });\n      }\n    });\n    // 获取地图列表\n    await getMapList().then((res) => {\n      if (res.state && res.data.data) {\n        res.data.data.forEach((item) => {\n          this.$set(this.mapList, item.id, item);\n        });\n      }\n    });\n    this.drawMap.setPoint = this.setPoint;\n    this.backPage = this.$route.query.backPage; //返回地址\n    this.areaName = \"区域: \" + this.$route.query.areaName; //区域名称\n    this.areaId = Number(this.$route.params.id); //区域id\n    this.getList();\n  },\n  methods: {\n    // 返回来源页面\n    goBack() {\n      this.$router.push(this.backPage);\n    },\n    // 获取连接点列表\n    getList() {\n      let params = { areaId: this.areaId };\n      this.tableLoading = true;\n      getConnectList(params).then((res) => {\n        this.tableLoading = false;\n        if (res.state) {\n          this.tableList = res.data || [];\n          this.tableList.forEach((item) => {\n            if (this.mapList[item.mapId]) {\n              item.areaId = this.mapList[item.mapId].areaId;\n            }\n          });\n        }\n      });\n    },\n    // 表单数据重置\n    resetTemp() {\n      this.temp = {\n        id: null,\n        areaId: \"\",\n        sourceMapId: \"\",\n        sourceConnectPoint: \"\",\n        targetMapId: \"\",\n        targetConnectPoint: \"\",\n        virtualDistance: 0,\n      };\n    },\n    // 准备创建\n    handleCreate() {\n      this.resetTemp();\n      this.dialogStatus = \"create\";\n      this.dialogFormVisible = true;\n      this.$nextTick(() => {\n        this.$refs[\"dataForm\"].clearValidate();\n      });\n      this.temp.areaId = this.areaId;\n      this.connectPoints = {};\n    },\n    // 准备修改\n    handleUpdate(row) {\n      this.temp = JSON.parse(JSON.stringify(row));\n      this.dialogStatus = \"update\";\n      this.dialogFormVisible = true;\n      this.$nextTick(() => {\n        this.$refs[\"dataForm\"].clearValidate();\n        this.createMapView(this.temp.sourceMapId);\n      });\n    },\n    // 关闭弹框\n    closeDialog() {\n      this.drawMap.clearMap();\n      this.drawMapId = \"\";\n      this.$nextTick(() => {\n        this.$refs[\"dataForm\"].clearValidate();\n        this.dialogFormVisible = false;\n      });\n    },\n    // 删除连接点\n    handleDelete(row) {\n      this.$confirm(\"确定删除该连接点?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\",\n      })\n        .then(() => {\n          deleteConnect({ id: row.id }).then((res) => {\n            if (res.state) {\n              this.$message.success(\"连接点删除成功\");\n              this.getList();\n            }\n          });\n        })\n        .catch(() => {});\n    },\n    // 增加连接点\n    registerCharge() {\n      this.$refs[\"dataForm\"].validate((valid) => {\n        if (valid) {\n          const params = JSON.parse(JSON.stringify(this.temp));\n          delete params.id;\n          delete params.areaId;\n          addConnect(params).then((res) => {\n            if (res.state) {\n              this.$message.success(\"连接点新增成功！\");\n              this.getList();\n              this.resetTemp();\n              this.$nextTick(() => {\n                this.$refs[\"dataForm\"].clearValidate();\n                this.closeDialog();\n              });\n            }\n          });\n        }\n      });\n    },\n    // 修改连接点\n    updateVehicle() {\n      this.$refs[\"dataForm\"].validate((valid) => {\n        if (valid) {\n          const params = JSON.parse(JSON.stringify(this.temp));\n          delete params.areaId;\n          delete params.status;\n          delete params.amrId;\n          delete params.type;\n          updateConnect(params).then((res) => {\n            if (res.state) {\n              this.$message.success(\"连接点修改成功！\");\n              this.getList();\n              this.resetTemp();\n              this.closeDialog();\n            }\n          });\n        }\n      });\n    },\n    // 初始化地图信息\n    createMapView(mapId) {\n      if (mapId && this.drawMapId !== mapId) {\n        this.drawMapId = mapId;\n        this.getMap(mapId)\n          .then(() => {\n            this.drawMapView();\n          })\n          .catch((err) => {\n            Message.error(err);\n          });\n      }\n    },\n    // 获取地图详情\n    getMap(mapId) {\n      return new Promise((resolve, reject) => {\n        this.mapInfo = { mapPoints: [], mapRoutes: [] };\n        this.pointList = [];\n        getMapDetails({ mapId }).then(({ state, data }) => {\n          if (state) {\n            if (data) {\n              this.mapInfo = {\n                mapPoints: data.Vertex,\n                mapRoutes: data.Edge,\n              };\n              data.Vertex.forEach((n) => {\n                this.pointList.push(n.vertexPo.code);\n              });\n              resolve();\n            } else {\n              reject(\"地图数据为空\");\n            }\n          }\n        });\n      });\n    },\n    // 绘制地图\n    drawMapView() {\n      if (this.drawMapId) {\n        this.drawMap.drawMapView({\n          svg: this.$svg,\n          ele: document.getElementById(\"drawMap\"),\n          mapInfo: this.mapInfo,\n        });\n        let vertexCode = \"\";\n        if (this.temp.sourceMapId === this.drawMapId) {\n          vertexCode = this.temp.sourceConnectPoint;\n        } else if (this.temp.targetMapId === this.drawMapId) {\n          vertexCode = this.temp.targetConnectPoint;\n        }\n        if (vertexCode) this.setPoint(vertexCode);\n      }\n    },\n    // 地图上选择绑定点位、下拉选择点位\n    setPoint(id) {\n      this.removePointClass();\n      this.addPointClass(\"ADD\" + id);\n      this.temp.vertexCode = id;\n      if (this.temp.sourceMapId === this.drawMapId) {\n        this.temp.sourceConnectPoint = id;\n      } else if (this.temp.targetMapId === this.drawMapId) {\n        this.temp.targetConnectPoint = id;\n      }\n    },\n    // 移除选中点位样式\n    removePointClass() {\n      if (this.lastCheckedPoint) {\n        const prePoint = this.$svg.get(this.lastCheckedPoint);\n        if (prePoint) prePoint.removeClass(\"selectedPoint\");\n      }\n    },\n    // 增加选中点位样式\n    addPointClass(id) {\n      id = id.replace(/#/gi, \"---\");\n      const curPoint = this.$svg.get(id);\n      if (curPoint) curPoint.addClass(\"selectedPoint\");\n      this.lastCheckedPoint = id;\n    },\n    // 全屏操作\n    setFullScreen() {\n      this.fullscreen = !this.fullscreen;\n      this.$nextTick(() => {\n        this.drawMapView();\n      });\n    },\n  },\n};\n</script>","import mod from \"-!../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../../node_modules/_babel-loader@8.2.3@babel-loader/lib/index.js!../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./connectVertex.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../../node_modules/_babel-loader@8.2.3@babel-loader/lib/index.js!../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./connectVertex.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./connectVertex.vue?vue&type=template&id=3b3d21fc&\"\nimport script from \"./connectVertex.vue?vue&type=script&lang=js&\"\nexport * from \"./connectVertex.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import request from '@/utils/request'\n\n// 获取所有工作区域列表☑️\nexport function getDomainList(data) {\n  return request.post('/area/list', data)\n}\n\n// 新增和修改工作区域☑️\nexport function editDomain(data) {\n  return request.post(\"/area/update\", data)\n}\n\n// 删除工作区域☑️\nexport function deleteDomain(id) {\n  return request.post(\"/area/delete/\" + id)\n}\n\n// 获取一键归巢状态列表\nexport function getForcedArea() {\n  return request.get(\"rest/forcedArea/getRestForcedAreaList\")\n}\n\n// 修改一键归巢状态\nexport function setForcedArea({ areaId, enable }) {\n  return request.put(`rest/forcedArea/addOrUpdate/${areaId}/${enable}`)\n}","/*\n~~~~  用于任务弹框、外部设备：绘制地图  ~~~~~\n*/\nimport { Message } from \"element-ui\"\n\nexport default class DrawMap {\n    constructor() {\n        this.svg = null;\n        this.ele = null;\n        this.mapInfo = null;\n        this.canvas = null;\n        this.mapGroup = {\n            line: \"\",\n            point: \"\",\n            pointText: \"\",\n        }\n        this.clickTimeout = 0   //单击点位延时定时器\n        this.clickTimeoutTime = 300  //单击点位延时定时器时长\n        this.scale = 1; //初始倍数\n        this.maxCodeLimit = 1000 //超过该数值，点位默认不绘制，且缩放时隐藏\n        this.isCodeShow = true //当前点位名称是否显示\n    }\n    drawMapView({ svg, ele, mapInfo }) {\n        this.svg = svg;\n        this.ele = ele;\n        this.mapInfo = mapInfo;\n        let map = this.svg.get(\"drawmap\");\n        if (map) map.remove();\n        const viewWidth = this.ele.clientWidth - 5;\n        const viewHeight = this.ele.clientHeight - 5;\n        let minX, minY, maxX, maxY;\n        if (!mapInfo.topologyMap) {\n            // 如果绘制全部的点位和路径，就将绘制范围尽量保证减少空白\n            let mapPointX = mapInfo.mapPoints.map(({ vertexPo }) => {\n                return vertexPo.x;\n            })\n            let mapPointY = mapInfo.mapPoints.map(({ vertexPo }) => {\n                return vertexPo.y;\n            })\n            // 适应特殊情况：没有点位；所有点位的x或y一致\n            if (mapPointX.length === 0) mapPointX = [0]\n            if (mapPointY.length === 0) mapPointY = [0]\n            minX = Math.min.apply(null, mapPointX)\n            minY = Math.min.apply(null, mapPointY)\n            maxX = Math.max.apply(null, mapPointX)\n            maxY = Math.max.apply(null, mapPointY)\n        } else {\n            // 如果点位经过过滤，那么就用地图的原点和大小来作为绘制范围; 是为了更好分辨点位的所属位置\n            minX = mapInfo.topologyMap.originX\n            minY = mapInfo.topologyMap.originY\n            maxX = mapInfo.topologyMap.originX + mapInfo.topologyMap.weight\n            maxY = mapInfo.topologyMap.originY + mapInfo.topologyMap.height\n        }\n        let matrix = new this.svg.Matrix(1, 0, 0, -1, 0.5, 0.5);\n        let viewX = maxX - minX ? maxX - minX : 1\n        let viewY = maxY - minY ? maxY - minY : 1\n        let scaleX = Math.floor(viewWidth / viewX);\n        let scaleY = Math.floor(viewHeight / viewY);\n        let scale = scaleX < scaleY ? scaleX : scaleY;\n        this.scale = scale;\n        //地图初始化\n        this.canvas = this.svg(\"drawMap\")\n            .id(\"drawmap\")\n            .size(viewWidth, viewHeight)\n            .viewbox(minX, minY, viewX, viewY)\n            .transform(matrix)\n            .panZoom({\n                zoomMin: (scale / 3) * 2,\n                zoomMax: scale * 300,\n                zoomFactor: scale / 5,\n            });\n\n        this.mapGroup.line = this.canvas.group();\n        this.mapGroup.pointText = this.canvas.group();\n        this.mapGroup.point = this.canvas.group();\n        this.drawMapPoint(scale);\n        this.drawMapRoute(scale);\n        // 当点位过多时，默认初始不绘制点位名称\n        if (mapInfo.mapPoints.length > this.maxCodeLimit) {\n            this.isCodeShow = false;\n            let message = `1. 地图点位数量超过${this.maxCodeLimit}个时, 首次打开<b>不绘制</b>点位名称, 缩放时<b>清除</b>点位名称;</br>2. <b>双击</b>地图时, 绘制点位名称。`\n            Message({\n                showClose: true,\n                message,\n                duration: 10000,\n                dangerouslyUseHTMLString: true\n            })\n        } else {\n            this.isCodeShow = true;\n            this.drawSpotCodes();\n        }\n        this.canvas.zoom(this.canvas.zoom() - 0.24);\n        // 双击地图时，可绘制点位名称\n        this.canvas.on(\"dblclick\", () => {\n            if (mapInfo.mapPoints.length > this.maxCodeLimit && !this.isCodeShow) {\n                this.isCodeShow = true;\n                this.drawSpotCodes();\n            }\n        })\n        this.ele.addEventListener('wheel', this.mouseWheelHandler.bind(this), false)\n        this.setSort();\n    }\n    //绘制拓扑点\n    drawMapPoint(scale) {\n        for (const { vertexPo } of this.mapInfo.mapPoints) {\n            var color = \"#0067b8\";\n            switch (vertexPo.type) {\n                case 128:\n                    color = \"#cd6600\";\n                    break;\n                case 0:\n                    color = \"#0067b8\";\n                    break;\n                default:\n                    color = \"#47fa65\";\n                    break;\n            }\n            let drawPoint = this.canvas\n                .circle(2 / scale)\n                .id(\"ADD\" + vertexPo.code.replace(/#/ig, '---'))\n                .center(vertexPo.x, vertexPo.y)\n                .fill(color)\n                .on(\"click\", () => {\n                    this.setPoint(vertexPo.code);\n                })\n            this.mapGroup.point.add(drawPoint);\n        }\n    }\n    //绘制路线，改成绘制一条path\n    drawMapRoute(scale) {\n        let d = \"\";\n        for (const { startVertex, targetVertex } of this.mapInfo.mapRoutes) {\n            d +=\n                \"M \" + startVertex.vertexPo.x +\n                \" \" + startVertex.vertexPo.y +\n                \" L \" + targetVertex.vertexPo.x +\n                \" \" + targetVertex.vertexPo.y;\n        }\n        this.mapGroup.line.path(d)\n            .stroke({\n                width: 0.4 / scale,\n                color: \"rgb(188, 194, 196)\",\n            })\n    }\n    // 绘制点位名称\n    drawSpotCodes() {\n        let fun = () => {\n            for (const { vertexPo } of this.mapInfo.mapPoints) {\n                this.mapGroup.pointText.add(\n                    this.canvas\n                        .plain(vertexPo.code)\n                        .font({ size: 8 / this.scale })\n                        .scale(-1 / 4, 1 / 4, vertexPo.x, vertexPo.y)\n                        .rotate(180, vertexPo.x, vertexPo.y)\n                        .center(vertexPo.x, vertexPo.y + 9 / this.scale)\n                );\n            }\n        };\n        // 特殊情况下，增加提示语\n        if (this.mapInfo.mapPoints.length > this.maxCodeLimit) {\n            this.loadingMessage && this.loadingMessage.close();\n            this.loadingMessage = Message({\n                type: \"info\",\n                duration: 200000,\n                message: \"正在绘制点位名称中, 请稍后\",\n            });\n            // 为了保证提示语能够展示，不加的话会被卡住显示不了\n            setTimeout(() => {\n                fun();\n                this.loadingMessage && this.loadingMessage.close();\n            }, 50);\n        } else {\n            fun();\n        }\n    }\n    // 缩放时操作\n    mouseWheelHandler() {\n        // 特殊情况下，缩放时移除所有点位名称\n        if (this.mapInfo && this.mapInfo.mapPoints.length > this.maxCodeLimit) {\n            if (this.isCodeShow) {\n                this.isCodeShow = false;\n                this.mapGroup.pointText.clear();\n            }\n        }\n    }\n    // 清空地图绘制\n    clearMap() {\n        this.canvas && this.canvas.clear();\n        this.loadingMessage && this.loadingMessage.close();\n    }\n\n    // ~~~~暴露给外部\n\n    // 排序\n    setSort() { }\n    // 单击选择点位\n    setPoint() { }\n}","import request from '@/utils/request'\n\n// 获取地图列表\nexport function getMapList(data) {\n  return request.get('/map/mapList', data)\n}\n\n// 修改地图\nexport function updateMap(data) {\n  return request.post('/map/updateMap', data)\n}\n\n// 删除地图\nexport function deleteMap(id) {\n  return request.post('/map/delete/' + id)\n}\n\n// 获取地图详情\nexport function getMapDetails(data) {\n  return request.get('/map/getMapDetailById', data)\n}\n\n// 获取某工作区域下的点位列表\nexport function getAreaVertexes(areaId) {\n  return request.get('map/getAreaAllVertexes/' + areaId)\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","'use strict';\nvar toObject = require('../internals/to-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// `Array.prototype.fill` method implementation\n// https://tc39.es/ecma262/#sec-array.prototype.fill\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = lengthOfArrayLike(O);\n  var argumentsLength = arguments.length;\n  var index = toAbsoluteIndex(argumentsLength > 1 ? arguments[1] : undefined, length);\n  var end = argumentsLength > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}"],"sourceRoot":""}